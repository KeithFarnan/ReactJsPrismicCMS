{"version":3,"sources":["prismic-configuration.js","Preview.js","components/NotFound.js","components/slices/TextSection.js","components/slices/Quote.js","components/slices/FullWidthImage.js","components/slices/ImageGallery.js","components/slices/ImageHighlight.js","components/slices/SliceZone.js","components/Header.js","components/Footer.js","components/Loader.js","components/HomePage.js","components/Page.js","components/Document.js","App.js","PrismicApp.js","registerServiceWorker.js","index.js"],"names":["prismic_configuration","apiEndpoint","linkResolver","doc","type","concat","uid","Preview","_this","this","props","prismicCtx","params","qs","parse","location","search","slice","api","previewSession","token","PrismicConfig","then","url","history","push","react_default","a","createElement","React","Component","NotFound","document","title","className","href","TextSection","sectionClass","slice_label","RichText","render","primary","rich_text","Quote","asText","quote_text","FullWidthImage","src","image","alt","ImageGallery","items","map","item","index","key","image_description","link_label","Link","link","gallery_title","galleryItems","ImageHighlight","headline","featured_image","SliceZone","sliceZone","slice_type","TextSection_TextSection","Quote_Quote","FullWidthImage_FullWidthImage","ImageGallery_ImageGallery","ImageHighlight_ImageHighlight","Header","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","notFound","menuOpen","fetchPage","prevProps","toolbar","_this2","getSingle","err","setState","_this3","data","menu_links","menuLink","id","label","listOpen","prevState","menuLinks","Footer","target","rel","Loader","HomePage","banner","style","backgroundImage","tagline","button_label","button_link","data-wio-id","Header_Header","homePageBanner","homepage_banner","SliceZone_SliceZone","page_content","Footer_Footer","Loader_Loader","Page","getByUID","match","Document","App","BrowserRouter","Switch","Route","exact","path","routeProps","HomePage_HomePage","assign","Preview_Preview","Page_Page","Pages_default","Document_Document","component","PrismicApp","buildContext","catch","e","console","error","maybeCurrentExperiment","currentExperiment","window","PrismicToolbar","startExperiment","googleId","setup","accessToken","Prismic","endpoint","refreshToolbar","src_App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","PrismicApp_PrismicApp","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.80a86814.chunk.js","sourcesContent":["export default {\n\n  apiEndpoint: 'https://react-test-test.prismic.io/api/v2',\n\n  linkResolver(doc) {\n    if (doc.type === 'page') return `/pages/${doc.uid}`;\n    if (doc.type === 'pages') return `/pages/`;\n    if (doc.type === 'document') return `/documents/${doc.uid}`;\n    if (doc.type === 'documents') return `/documents`;\n    return '/';\n  },\n};\n","import React from 'react';\nimport qs from 'qs';\nimport PrismicConfig from './prismic-configuration';\n\nexport default class Preview extends React.Component {\n  componentDidUpdate() {\n    if(this.props.prismicCtx) {\n      const params = qs.parse(this.props.location.search.slice(1));\n      this.props.prismicCtx.api.previewSession(params.token, PrismicConfig.linkResolver, '/').then((url) => {\n        this.props.history.push(url);\n      });\n    }\n  }\n\n  render() {\n    return <div></div>;\n  }\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  document.title = \"404 - Not Found\";\n  return (\n    <div className=\"not-found\">\n      <h1>404</h1>\n      <h2>Document not found</h2>\n      <p><a href=\"/\">Return to homepage</a></p>\n    </div>\n  );\n}\n","import React from 'react';\nimport {RichText} from 'prismic-reactjs';\n\nexport default class TextSection extends React.Component {\n  render() {\n    const sectionClass = this.props.slice.slice_label ? 'text-section-' + this.props.slice.slice_label : 'text-section-1col'\n    return (\n      <section className={`content-section ${sectionClass}`}>\n        <div>\n          {RichText.render(this.props.slice.primary.rich_text, this.props.prismicCtx.linkResolver)}\n        </div>\n      </section>\n    );\n  }\n} ","import React from 'react';\nimport {RichText} from 'prismic-reactjs';\n\nexport default class Quote extends React.Component {\n  render() {\n    return (\n      <section className=\"content-section quote\">\n        <blockquote>\n          {RichText.asText(this.props.slice.primary.quote_text)}\n        </blockquote>\n      </section>\n    );\n  }\n}","import React from 'react';\n\nexport default class FullWidthImage extends React.Component {\n  render() {\n    return (\n      <section className=\"full-width-image content-section\">\n        <img src={this.props.slice.primary.image.url} alt={this.props.slice.primary.image.alt} />\n      </section>\n    );\n  }\n}","import React from 'react';\nimport {Link, RichText} from 'prismic-reactjs';\n\nexport default class ImageGallery extends React.Component {\n  galleryItems() {\n    return this.props.slice.items.map((item, index) => {\n      return (\n        <div className=\"gallery-item\" key={index}>\n          <img src={item.image.url} alt={item.image.alt} />\n          {RichText.render(item.image_description, this.props.prismicCtx.linkResolver)}\n          {RichText.asText(item.link_label) !== \"\" ? (\n            <p className=\"gallery-link\">\n              <a href={Link.url(item.link, this.props.prismicCtx.linkResolver)}>\n                {RichText.asText(item.link_label)}\n              </a>\n            </p>\n          ) : '' }\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"image-gallery content-section\">\n        {RichText.render(this.props.slice.primary.gallery_title, this.props.prismicCtx.linkResolver)}\n        <div className=\"gallery\">\n          {this.galleryItems()}\n        </div>\n      </section>\n    );\n  }\n}","import React from 'react';\nimport {Link, RichText} from 'prismic-reactjs';\n\nexport default class ImageHighlight extends React.Component {\n  render() {\n    return (\n      <section className=\"highlight content-section\">\n        <div className=\"highlight-left\">\n          {RichText.render(this.props.slice.primary.title, this.props.prismicCtx.linkResolver)}\n          {RichText.render(this.props.slice.primary.headline, this.props.prismicCtx.linkResolver)}\n          {RichText.asText(this.props.slice.primary.link_label) !== \"\" ? (\n            <p>\n              <a href={Link.url(this.props.slice.primary.link, this.props.prismicCtx.linkResolver)}>\n                {RichText.asText(this.props.slice.primary.link_label)}\n              </a>\n            </p>\n          ) : '' }\n        </div>\n        <div className=\"highlight-right\">\n          <img src={this.props.slice.primary.featured_image.url} alt={this.props.slice.primary.featured_image.alt} />\n        </div>\n      </section>\n    );\n  }\n}","import React from 'react';\nimport TextSection from './TextSection';\nimport Quote from './Quote';\nimport FullWidthImage from './FullWidthImage';\nimport ImageGallery from './ImageGallery';\nimport ImageHighlight from './ImageHighlight';\n\nexport default class SliceZone extends React.Component {\n  render() {\n    return this.props.sliceZone.map((slice, index) => {\n      switch (slice.slice_type) {\n        case (\"text_section\"):\n          return <TextSection slice={slice} key={'slice-' + index} prismicCtx={this.props.prismicCtx}/>\n        case (\"quote\"):\n          return <Quote slice={slice} key={'slice-' + index} />\n        case (\"full_width_image\"):\n          return <FullWidthImage slice={slice} key={'slice-' + index} />\n        case (\"image_gallery\"):\n          return <ImageGallery slice={slice} key={'slice-' + index} prismicCtx={this.props.prismicCtx}/>\n        case (\"image_highlight\"):\n          return <ImageHighlight slice={slice} key={'slice-' + index} prismicCtx={this.props.prismicCtx}/>\n        default:\n          return null;\n      }\n    })\n  }\n}","import React from 'react';\nimport {Link, RichText} from 'prismic-reactjs';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\n\nexport default class Header extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      doc: null,\n      notFound: false,\n      menuOpen: false,\n\n    }\n    if (props.prismicCtx) {\n      this.fetchPage(props);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.prismicCtx.toolbar();\n    // We fetch the page only after it's ready to query the api\n    if (!prevProps.prismicCtx) {\n      this.fetchPage(this.props);\n    }\n  }\n\n  fetchPage(props) {\n    if (props.prismicCtx) {\n      // We use a single document query to get the only menu document\n      return props.prismicCtx.api.getSingle('menu', {}, (err, doc) => {\n        if (doc) {\n          // We put the retrieved content in the state as a doc variable\n          this.setState({ doc });\n        } else {\n          // We changed the state to display error not found if no matched doc\n          this.setState({ notFound: !doc });\n        }\n      });\n    }\n    return null;\n  }\n\n  menuLinks() {\n    return this.state.doc.data.menu_links.map((menuLink) => {\n      //return < Sidebar/>;\n      return (\n        <li key={menuLink.link.id}>\n          <a href={Link.url(menuLink.link, this.props.prismicCtx.linkResolver)}>\n            {RichText.asText(menuLink.label)}\n          </a>\n        </li>\n      );\n    });\n  }\n\n  handleClickOutside(){\n  this.setState({\n    listOpen: false\n  })\n}\n\ntoggleList(){\n  this.setState(prevState => ({\n    listOpen: !prevState.listOpen\n  }))\n}\n\n\n  render() {\n    if (this.state.doc) {\n      return (\n\n        <header className=\"site-header\">\n          <a href=\"/\">\n            <div className=\"logo\">ReactJS Prismic Site</div>\n          </a>\n\n          <navBar>\n            <ul>\n              {this.menuLinks()}\n            </ul>\n          </navBar>\n        </header>\n\n      );\n    } else {\n      return null\n    }\n  }\n}\n","import React from 'react';\n\nexport default class Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <p>\n          GitHub link ;<a href=\"https://github.com/KeithFarnan/ReactJsPrismicCMS\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n          <br/>\n          <a href=\"https://prismic.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img className=\"footer-logo\" src=\"/images/logo-prismic.svg\" alt=\"Gray Prismic logo\"/>\n          </a>\n        </p>\n      </footer>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Loader extends React.Component {\n  render() {\n    return (\n      <div id=\"loader\">\n        <div className=\"lds-ripple\"></div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport NotFound from './NotFound';\nimport {Link, RichText} from 'prismic-reactjs';\nimport SliceZone from './slices/SliceZone';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Loader from './Loader';\n\nexport default class HomePage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      doc: null,\n      notFound: false,\n    }\n    if (props.prismicCtx) {\n      this.fetchPage(props);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.prismicCtx.toolbar();\n    // We fetch the page only after it's ready to query the api\n    if (!prevProps.prismicCtx) {\n      this.fetchPage(this.props);\n    }\n  }\n\n  fetchPage(props) {\n    if (props.prismicCtx) {\n      // We use a single document query to get the only Homepage document\n      return props.prismicCtx.api.getSingle('homepage', {}, (err, doc) => {\n        if (doc) {\n          // We put the retrieved content in the state as a doc variable\n          this.setState({ doc });\n        } else {\n          // We changed the state to display error not found if no matched doc\n          this.setState({ notFound: !doc });\n        }\n      });\n    }\n    return null;\n  }\n\n  homePageBanner(banner) {\n    return (\n      <section className=\"homepage-banner\"\n        style={{backgroundImage: 'linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6)), url(' + banner.image.url +')'}}>\n        <div className=\"banner-content container\">\n          <h2 className=\"banner-title\">{RichText.asText(banner.title)}</h2>\n          <p className=\"banner-description\">{RichText.asText(banner.tagline)}</p>\n          {RichText.asText(banner.button_label) !== \"\" ? (\n            // Displays the button link only if it's been defined\n            <a className=\"banner-button\" href={Link.url(banner.button_link, this.props.prismicCtx.linkResolver)}>\n              {RichText.asText(banner.button_label)}\n            </a>\n          ) : ''}\n        </div>\n      </section>\n    );\n  }\n\n  render() {\n    if (this.state.doc) {\n      return (\n        <div className=\"homepage\" data-wio-id={this.state.doc.id}>\n          <Header prismicCtx={this.props.prismicCtx} />\n          {this.homePageBanner(this.state.doc.data.homepage_banner[0])}\n          <div className=\"container\">\n            <SliceZone sliceZone={this.state.doc.data.page_content} prismicCtx={this.props.prismicCtx} />\n          </div>\n          <Footer />\n        </div>\n      );\n    } else if (this.state.notFound) {\n      return <NotFound />;\n    }\n    return <Loader />;\n  }\n}\n","import React from 'react';\nimport NotFound from './NotFound';\nimport SliceZone from './slices/SliceZone';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Loader from './Loader';\n\nexport default class Page extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      doc: null,\n      notFound: false,\n    }\n    if (props.prismicCtx) {\n      this.fetchPage(props);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.prismicCtx.toolbar();\n    if (!prevProps.prismicCtx) {\n      this.fetchPage(this.props);\n    }\n  }\n\n  fetchPage(props) {\n    if (props.prismicCtx) {\n      // We are using the function to get a document by its uid\n      return props.prismicCtx.api.getByUID('page', props.match.params.uid, {}, (err, doc) => {\n        if (doc) {\n          // We put the retrieved content in the state as a doc variable\n          this.setState({ doc });\n        } else {\n          // We changed the state to display error not found if no matched doc\n          this.setState({ notFound: !doc });\n        }\n      });\n    }\n    return null;\n  }\n\n  render() {\n    if (this.state.doc) {\n      return (\n        <div className=\"page\" data-wio-id={this.state.doc.id}>\n          <Header prismicCtx={this.props.prismicCtx} />\n          <div className=\"container\">\n            <SliceZone sliceZone={this.state.doc.data.page_content} prismicCtx={this.props.prismicCtx} />\n          </div>\n          <Footer />\n        </div>\n      );\n    } else if (this.state.notFound) {\n      return <NotFound />;\n    }\n    return <Loader />;\n  }\n}","import React from 'react';\nimport NotFound from './NotFound';\nimport SliceZone from './slices/SliceZone';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Loader from './Loader';\n\nexport default class Document extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      doc: null,\n      notFound: false,\n    }\n    if (props.prismicCtx) {\n      this.fetchPage(props);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.prismicCtx.toolbar();\n    if (!prevProps.prismicCtx) {\n      this.fetchPage(this.props);\n    }\n  }\n\n  fetchPage(props) {\n    if (props.prismicCtx) {\n      // We are using the function to get a document by its uid\n      return props.prismicCtx.api.getByUID('document', props.match.params.uid, {}, (err, doc) => {\n        if (doc) {\n          // We put the retrieved content in the state as a doc variable\n          this.setState({ doc });\n        } else {\n          // We changed the state to display error not found if no matched doc\n          this.setState({ notFound: !doc });\n        }\n      });\n    }\n    return null;\n  }\n\n  render() {\n    if (this.state.doc) {\n      return (\n        <div className=\"document\" data-wio-id={this.state.doc.id}>\n          <Header prismicCtx={this.props.prismicCtx} />\n          <div className=\"container\">\n            <SliceZone sliceZone={this.state.doc.data.page_content} prismicCtx={this.props.prismicCtx} />\n          </div>\n          <Footer />\n        </div>\n      );\n    } else if (this.state.notFound) {\n      return <NotFound />;\n    }\n    return <Loader />;\n  }\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Preview from './Preview';\nimport NotFound from './components/NotFound';\nimport HomePage from './components/HomePage';\nimport Page from './components/Page';\nimport Pages from './components/Pages'\nimport Document from './components/Document'\n//import Documents from './components/Documents'\n\nconst App = (props) => (\n\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" render={routeProps => <HomePage {...routeProps} prismicCtx={props.prismicCtx} />} />\n      <Route exact path=\"/preview\" render={routeProps => <Preview {...routeProps} prismicCtx={props.prismicCtx} />} />\n      <Route exact path=\"/pages/:uid\" render={routeProps => <Page {...routeProps} prismicCtx={props.prismicCtx} />} />\n      <Route exact path=\"/pages\" render={routeProps => <Pages {...routeProps} prismicCtx={props.prismicCtx} />} />\n      <Route exact path=\"/documents/:uid\" render={routeProps => <Document {...routeProps} prismicCtx={props.prismicCtx} />} />\n      \n      <Route component={NotFound} />\n    </Switch>\n  </Router>\n\n);\n\nexport default App;\n","import React from 'react';\nimport 'whatwg-fetch';\nimport Prismic from 'prismic-javascript';\nimport PrismicConfig from './prismic-configuration';\nimport App from './App';\n\nexport default class PrismicApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { prismicCtx: null };\n    this.buildContext().then((prismicCtx) => {\n      this.setState({ prismicCtx });\n    }).catch((e) => {\n      console.error(`Cannot contact the API, check your prismic configuration:\\n${e}`);\n    });\n  }\n\n  refreshToolbar() {\n    const maybeCurrentExperiment = this.api.currentExperiment();\n    if (maybeCurrentExperiment) {\n      window.PrismicToolbar.startExperiment(maybeCurrentExperiment.googleId());\n    }\n    window.PrismicToolbar.setup(PrismicConfig.apiEndpoint);\n  }\n\n  buildContext() {\n    const accessToken = PrismicConfig.accessToken;\n    return Prismic.api(PrismicConfig.apiEndpoint, { accessToken }).then(api => ({\n      api,\n      endpoint: PrismicConfig.apiEndpoint,\n      accessToken,\n      linkResolver: PrismicConfig.linkResolver,\n      toolbar: this.refreshToolbar,\n    }));\n  }\n\n  render() {\n\n    return <App prismicCtx={this.state.prismicCtx} />;\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import App from './App'\nimport PrismicApp from './PrismicApp';\nimport * as registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render(<PrismicApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker.register();\n"],"sourceRoot":""}