{"ast":null,"code":"// import React from 'react';\n//\n// export default class MenuLinks extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       doc: null,\n//       notFound: false,\n//     }\n//     if (props.prismicCtx) {\n//       this.fetchPage(props);\n//     }\n//   }\n//\n//   componentDidUpdate(prevProps) {\n//     this.props.prismicCtx.toolbar();\n//     // We fetch the page only after it's ready to query the api\n//     if (!prevProps.prismicCtx) {\n//       this.fetchPage(this.props);\n//     }\n//   }\n//\n//   fetchPage(props) {\n//     if (props.prismicCtx) {\n//       // We use a single document query to get the only menu document\n//       return props.prismicCtx.api.getSingle('menu', {}, (err, doc) => {\n//         if (doc) {\n//           // We put the retrieved content in the state as a doc variable\n//           this.setState({ doc });\n//         } else {\n//           // We changed the state to display error not found if no matched doc\n//           this.setState({ notFound: !doc });\n//         }\n//       });\n//     }\n//     return null;\n//   }\n//\n//   menuLinks() {\n//     return this.state.doc.data.menu_links.map((menuLink) => {\n//       //return < Sidebar/>;\n//       return (\n//\n//         <li key={menuLink.link.id}>\n//           <a href={Link.url(menuLink.link, this.props.prismicCtx.linkResolver)}>\n//             {RichText.asText(menuLink.label)}\n//           </a>\n//         </li>\n//       );\n//     });\n//   }","map":{"version":3,"sources":["/Users/tom/Desktop/ReactJsPrismicCMS/ReactJsPrismicCMS/src/components/Sidebar.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n//\n// export default class MenuLinks extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       doc: null,\n//       notFound: false,\n//     }\n//     if (props.prismicCtx) {\n//       this.fetchPage(props);\n//     }\n//   }\n//\n//   componentDidUpdate(prevProps) {\n//     this.props.prismicCtx.toolbar();\n//     // We fetch the page only after it's ready to query the api\n//     if (!prevProps.prismicCtx) {\n//       this.fetchPage(this.props);\n//     }\n//   }\n//\n//   fetchPage(props) {\n//     if (props.prismicCtx) {\n//       // We use a single document query to get the only menu document\n//       return props.prismicCtx.api.getSingle('menu', {}, (err, doc) => {\n//         if (doc) {\n//           // We put the retrieved content in the state as a doc variable\n//           this.setState({ doc });\n//         } else {\n//           // We changed the state to display error not found if no matched doc\n//           this.setState({ notFound: !doc });\n//         }\n//       });\n//     }\n//     return null;\n//   }\n//\n//   menuLinks() {\n//     return this.state.doc.data.menu_links.map((menuLink) => {\n//       //return < Sidebar/>;\n//       return (\n//\n//         <li key={menuLink.link.id}>\n//           <a href={Link.url(menuLink.link, this.props.prismicCtx.linkResolver)}>\n//             {RichText.asText(menuLink.label)}\n//           </a>\n//         </li>\n//       );\n//     });\n//   }\n"]},"metadata":{},"sourceType":"module"}