{"ast":null,"code":"import _classCallCheck from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tom/Desktop/ReactJsPrismicCMS/src/PrismicApp.js\";\nimport React from 'react';\nimport 'whatwg-fetch';\nimport Prismic from 'prismic-javascript';\nimport PrismicConfig from './prismic-configuration';\nimport App from './App';\n\nvar PrismicApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PrismicApp, _React$Component);\n\n  function PrismicApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PrismicApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PrismicApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      prismicCtx: null\n    };\n    return _this;\n  }\n\n  _createClass(PrismicApp, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.buildContext().then(function (prismicCtx) {\n        _this2.setState({\n          prismicCtx: prismicCtx\n        });\n      }).catch(function (e) {\n        console.error(\"Cannot contact the API, check your prismic configuration:\\n\".concat(e));\n      });\n    }\n  }, {\n    key: \"refreshToolbar\",\n    value: function refreshToolbar() {\n      var maybeCurrentExperiment = this.api.currentExperiment();\n\n      if (maybeCurrentExperiment) {\n        window.PrismicToolbar.startExperiment(maybeCurrentExperiment.googleId());\n      }\n\n      window.PrismicToolbar.setup(PrismicConfig.apiEndpoint);\n    }\n  }, {\n    key: \"buildContext\",\n    value: function buildContext() {\n      var _this3 = this;\n\n      var accessToken = PrismicConfig.accessToken;\n      return Prismic.api(PrismicConfig.apiEndpoint, {\n        accessToken: accessToken\n      }).then(function (api) {\n        return {\n          api: api,\n          endpoint: PrismicConfig.apiEndpoint,\n          accessToken: accessToken,\n          linkResolver: PrismicConfig.linkResolver,\n          toolbar: _this3.refreshToolbar\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(App, {\n        prismicCtx: this.state.prismicCtx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PrismicApp;\n}(React.Component);\n\nexport { PrismicApp as default };","map":{"version":3,"sources":["/Users/tom/Desktop/ReactJsPrismicCMS/src/PrismicApp.js"],"names":["React","Prismic","PrismicConfig","App","PrismicApp","state","prismicCtx","buildContext","then","setState","catch","e","console","error","maybeCurrentExperiment","api","currentExperiment","window","PrismicToolbar","startExperiment","googleId","setup","apiEndpoint","accessToken","endpoint","linkResolver","toolbar","refreshToolbar","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;;IAEqBC,U;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;;;;;yCAIa;AAAA;;AACnB,WAAKC,YAAL,GAAoBC,IAApB,CAAyB,UAACF,UAAD,EAAgB;AACvC,QAAA,MAAI,CAACG,QAAL,CAAc;AAAEH,UAAAA,UAAU,EAAVA;AAAF,SAAd;AACD,OAFD,EAEGI,KAFH,CAES,UAACC,CAAD,EAAO;AACdC,QAAAA,OAAO,CAACC,KAAR,sEAA4EF,CAA5E;AACD,OAJD;AAKD;;;qCAEgB;AACf,UAAMG,sBAAsB,GAAG,KAAKC,GAAL,CAASC,iBAAT,EAA/B;;AACA,UAAIF,sBAAJ,EAA4B;AAC1BG,QAAAA,MAAM,CAACC,cAAP,CAAsBC,eAAtB,CAAsCL,sBAAsB,CAACM,QAAvB,EAAtC;AACD;;AACDH,MAAAA,MAAM,CAACC,cAAP,CAAsBG,KAAtB,CAA4BnB,aAAa,CAACoB,WAA1C;AACD;;;mCAEc;AAAA;;AACb,UAAMC,WAAW,GAAGrB,aAAa,CAACqB,WAAlC;AACA,aAAOtB,OAAO,CAACc,GAAR,CAAYb,aAAa,CAACoB,WAA1B,EAAuC;AAAEC,QAAAA,WAAW,EAAXA;AAAF,OAAvC,EAAwDf,IAAxD,CAA6D,UAAAO,GAAG;AAAA,eAAK;AAC1EA,UAAAA,GAAG,EAAHA,GAD0E;AAE1ES,UAAAA,QAAQ,EAAEtB,aAAa,CAACoB,WAFkD;AAG1EC,UAAAA,WAAW,EAAXA,WAH0E;AAI1EE,UAAAA,YAAY,EAAEvB,aAAa,CAACuB,YAJ8C;AAK1EC,UAAAA,OAAO,EAAE,MAAI,CAACC;AAL4D,SAAL;AAAA,OAAhE,CAAP;AAOD;;;6BAEQ;AACP,aAAO,oBAAC,GAAD;AAAK,QAAA,UAAU,EAAE,KAAKtB,KAAL,CAAWC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAnCqCN,KAAK,CAAC4B,S;;SAAzBxB,U","sourcesContent":["import React from 'react';\nimport 'whatwg-fetch';\nimport Prismic from 'prismic-javascript';\nimport PrismicConfig from './prismic-configuration';\nimport App from './App';\n\nexport default class PrismicApp extends React.Component {\n\n  state = {\n    prismicCtx: null,\n  }\n\n  componentWillMount() {\n    this.buildContext().then((prismicCtx) => {\n      this.setState({ prismicCtx });\n    }).catch((e) => {\n      console.error(`Cannot contact the API, check your prismic configuration:\\n${e}`);\n    });\n  }\n\n  refreshToolbar() {\n    const maybeCurrentExperiment = this.api.currentExperiment();\n    if (maybeCurrentExperiment) {\n      window.PrismicToolbar.startExperiment(maybeCurrentExperiment.googleId());\n    }\n    window.PrismicToolbar.setup(PrismicConfig.apiEndpoint);\n  }\n\n  buildContext() {\n    const accessToken = PrismicConfig.accessToken;\n    return Prismic.api(PrismicConfig.apiEndpoint, { accessToken }).then(api => ({\n      api,\n      endpoint: PrismicConfig.apiEndpoint,\n      accessToken,\n      linkResolver: PrismicConfig.linkResolver,\n      toolbar: this.refreshToolbar,\n    }));\n  }\n\n  render() {\n    return <App prismicCtx={this.state.prismicCtx} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}