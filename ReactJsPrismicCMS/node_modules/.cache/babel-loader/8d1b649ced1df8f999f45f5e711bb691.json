{"ast":null,"code":"import _classCallCheck from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tom/Desktop/ReactJsPrismicCMS/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tom/Desktop/ReactJsPrismicCMS/src/components/HomePage.js\";\nimport React from 'react';\nimport NotFound from './NotFound';\nimport { Link, RichText } from 'prismic-reactjs';\nimport SliceZone from './slices/SliceZone';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Loader from './Loader';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n    _this.state = {\n      doc: null,\n      notFound: false\n    };\n\n    if (props.prismicCtx) {\n      _this.fetchPage(props);\n    }\n\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.props.prismicCtx.toolbar(); // We fetch the page only after it's ready to query the api\n\n      if (!prevProps.prismicCtx) {\n        this.fetchPage(this.props);\n      }\n    }\n  }, {\n    key: \"fetchPage\",\n    value: function fetchPage(props) {\n      var _this2 = this;\n\n      if (props.prismicCtx) {\n        // We use a single document query to get the only Homepage document\n        return props.prismicCtx.api.getSingle('homepage', {}, function (err, doc) {\n          if (doc) {\n            // We put the retrieved content in the state as a doc variable\n            _this2.setState({\n              doc: doc\n            });\n          } else {\n            // We changed the state to display error not found if no matched doc\n            _this2.setState({\n              notFound: !doc\n            });\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"homePageBanner\",\n    value: function homePageBanner(banner) {\n      return React.createElement(\"section\", {\n        className: \"homepage-banner\",\n        style: {\n          backgroundImage: 'linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6)), url(' + banner.image.url + ')'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"banner-content container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"banner-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, RichText.asText(banner.title)), React.createElement(\"p\", {\n        className: \"banner-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, RichText.asText(banner.tagline)), RichText.asText(banner.button_label) !== \"\" ? // Displays the button link only if it's been defined\n      React.createElement(\"a\", {\n        className: \"banner-button\",\n        href: Link.url(banner.button_link, this.props.prismicCtx.linkResolver),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, RichText.asText(banner.button_label)) : ''));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.doc) {\n        return React.createElement(\"div\", {\n          className: \"homepage\",\n          \"data-wio-id\": this.state.doc.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Header, {\n          prismicCtx: this.props.prismicCtx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), this.homePageBanner(this.state.doc.data.homepage_banner[0]), React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(SliceZone, {\n          sliceZone: this.state.doc.data.page_content,\n          prismicCtx: this.props.prismicCtx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })), React.createElement(Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }));\n      } else if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nexport { HomePage as default };","map":{"version":3,"sources":["/Users/tom/Desktop/ReactJsPrismicCMS/src/components/HomePage.js"],"names":["React","NotFound","Link","RichText","SliceZone","Header","Footer","Loader","HomePage","props","state","doc","notFound","prismicCtx","fetchPage","prevProps","toolbar","api","getSingle","err","setState","banner","backgroundImage","image","url","asText","title","tagline","button_label","button_link","linkResolver","id","homePageBanner","data","homepage_banner","page_content","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NotFound from './NotFound';\nimport {Link, RichText} from 'prismic-reactjs';\nimport SliceZone from './slices/SliceZone';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Loader from './Loader';\n\nexport default class HomePage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      doc: null,\n      notFound: false,\n    }\n    if (props.prismicCtx) {\n      this.fetchPage(props);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.prismicCtx.toolbar();\n    // We fetch the page only after it's ready to query the api\n    if (!prevProps.prismicCtx) {\n      this.fetchPage(this.props);\n    }\n  }\n\n  fetchPage(props) {\n    if (props.prismicCtx) {\n      // We use a single document query to get the only Homepage document\n      return props.prismicCtx.api.getSingle('homepage', {}, (err, doc) => {\n        if (doc) {\n          // We put the retrieved content in the state as a doc variable\n          this.setState({ doc });\n        } else {\n          // We changed the state to display error not found if no matched doc\n          this.setState({ notFound: !doc });\n        }\n      });\n    }\n    return null;\n  }\n\n  homePageBanner(banner) {\n    return (\n      <section className=\"homepage-banner\"\n        style={{backgroundImage: 'linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6)), url(' + banner.image.url +')'}}>\n        <div className=\"banner-content container\">\n          <h2 className=\"banner-title\">{RichText.asText(banner.title)}</h2>\n          <p className=\"banner-description\">{RichText.asText(banner.tagline)}</p>\n          {RichText.asText(banner.button_label) !== \"\" ? (\n            // Displays the button link only if it's been defined\n            <a className=\"banner-button\" href={Link.url(banner.button_link, this.props.prismicCtx.linkResolver)}>\n              {RichText.asText(banner.button_label)}\n            </a>\n          ) : ''}\n        </div>\n      </section>\n    );\n  }\n\n  render() {\n    if (this.state.doc) {\n      return (\n        <div className=\"homepage\" data-wio-id={this.state.doc.id}>\n          <Header prismicCtx={this.props.prismicCtx} />\n          {this.homePageBanner(this.state.doc.data.homepage_banner[0])}\n          <div className=\"container\">\n            <SliceZone sliceZone={this.state.doc.data.page_content} prismicCtx={this.props.prismicCtx} />\n          </div>\n          <Footer />\n        </div>\n      );\n    } else if (this.state.notFound) {\n      return <NotFound />;\n    }\n    return <Loader />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}